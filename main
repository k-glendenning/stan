#!/bin/bash
# Copyright 2013, Maxwell Rees, sthrs.me
# Licensed under the Eiffel Forum License 2.
source data/configuration

# Runtime values
myuser=$(tr '[A-Z]' '[a-z]' <<<"$mynick")
startup=$(date +%s)
lastline=0
shutupline=0
linecount=0
police='OFF'

# Functions
match() { perl -ne "if (\$_ =~ /:([\w\[\]{}\`\\\\]+)\!([~\w]+)@([\S]+) (\w+) ([#a-zA-Z\[\]{}\`\\\\]+) :(.*)/){print $2}" <<<"$1" | tr -d '\r\n'; }
getcmd() { perl -ne "if (\$_ =~ /^[$trigger]((?:[a-z][a-z]+)) ?((?:.*))?/){print $2}" <<<"$1"; }
uri() { perl -ne "if (\$_ =~ /.*(https?:\/\/[^<> \"\x01]+)[,.]?/) { print \$1 }" <<<"$1"; }

clean() { sed 's/\o001//g' <<<"$1"; }
send() { out=$(clean "$1"); echo -E "$out" >&3; }
say() { send "PRIVMSG $1 :$2"; }
log() { echo "$(date +'[%H:%M:%S]') $1"; }

# Traps
trap '{ source data/configuration; log "* Got SIGHUP, reloaded configuration."; }' SIGHUP
trap '{ log "* Got SIGINT or SIGTERM, quitting..."; send "QUIT :Received SIGINT or SIGTERM"; exit 0; }' SIGINT SIGTERM

# Connect
exec 3<>/dev/tcp/$server/$port
send "NICK $mynick"
send "USER $myuser x x :Bashful IRC Bot"

# Mainloop
while :; do
   read line <&3

   # PING / PONG
   if [[ $line =~ "PING" ]]; then
      send "PONG ${line:5}"
   # Identify and join channel(s)
   elif [[ $line =~ "376" ]]; then
      say 'NickServ' "identify $pass"
      sleep 2
      for chan in ${mychans[@]}; do
         send "JOIN $chan"
      done
   fi

   # Discard non-PRIVMSGs
   class=$(match "$line" '$4')
   if [ "$class" != 'PRIVMSG' ]; then
      continue
   fi

   # Message components:
   # * Sender identity
   nick=$(match "$line" '$1')
   user=$(match "$line" '$2')
   host=$(match "$line" '$3')
   mask="$nick!$user@$host"
   # * Recipient / channel
   chan=$(match "$line" '$5' | tr -d ' ')
   # If the channel is me, then set the channel to the sender's nick
   if [ "$chan" = "$mynick" ]; then
      chan=$nick
   fi
   # * Message body
   msg=$(match "$line" '$6')

   log "[$chan] <$nick> $msg"

   # URL check
   thisuri=$(uri "$msg")
   if [ -n "$thisuri" ] && (grep -qiv $nick <<<"${ignore[@]}"); then
      say "$chan" "$(python3 modules/title.py "$thisuri")"
      continue
   fi

   # Check if the message is a command.
   cmd=$(getcmd "$msg" '$1')
   if [ -z "$cmd" ]; then
      if (grep -qi $nick <<<"${ignore[@]}"); then
         continue
      fi
      number=$RANDOM
      let "number %= $randint"
      if [ $number -eq 67 ] || (grep -qi "\b$mynick\b" <<<"$msg"); then
         chat
      fi
      let "number %= $randwrite"
      if [ $number -eq 7 ]; then
         if (grep -qi 'http' <<<"$msg"); then
            continue
         fi
         log '* Learning...'
         (contrib/split.pl <<<"$msg") >> data/brain.db
      fi
      continue
   fi
   # Full command arguments as a string
   args=$(getcmd "$msg" '$2')
   # Command arguments as an array
   arg=(${args// / })
   
   # Normal command hook
   basic "$cmd"

   # #sporks command hook
   sporks "$cmd"

   # Modular command hook
   if [ -e "modules/$cmd.py" ]; then
      say "$chan" "$(python3 modules/$cmd.py $args)"
   fi

   # Priviledged command hook
   if [ "$mask" = "$owner" ]; then
      admin "$cmd"
   fi
   unset mask nick chan cmd args arg
done
