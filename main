#!/bin/bash
# Copyright 2013, Maxwell Rees, sthrs.me
# Licensed under the Eiffel Forum License 2.
source data/configuration

# Runtime values
startup=$(date +%s)
lastline=0
shutupline=0
linecount=0
police='OFF'

# Functions
match() { perl -ne "if (\$_ =~ /:([\w\[\]{}\`\\\\]+)\!([~\w]+)@([\S]+) (\w+) ([#a-zA-Z\[\]{}\`\\\\]+) :(.*)/){print $2}" <<<"$1" | tr -d '\r\n'; }
getcmd() { perl -ne "if (\$_ =~ /^(?:[$trigger]|(?:$mynick: do ))((?:[a-z]+)) ?((?:.*))?/){print $2}" <<<"$1"; }
uri() { perl -ne "if (\$_ =~ /.*(https?:\/\/[^<> \"\x01]+)[,.]?/) { print \$1 }" <<<"$1"; }
clean() { sed 's/\o001//g' <<<"$1"; }
send() { out=$(clean "$1"); echo -E "$out" >&3; }
say() { send "PRIVMSG $1 :$2"; }
log() { echo "$(date +'[%H:%M:%S]') $1"; }

# Traps
trap '{ source data/configuration; log "* Got SIGHUP, reloaded configuration."; }' SIGHUP
trap '{ log "* Got SIGINT or SIGTERM, quitting..."; send "QUIT :Received SIGINT or SIGTERM"; exit 0; }' SIGINT SIGTERM

# Connect
log "* Connecting to $server:$port..."
exec 3<>/dev/tcp/$server/$port
send "NICK $mynick"
send "USER $myuser x x :Bashful IRC Bot"

# Mainloop
while read line <&3; do
   # Housekeeping
   if [[ $line =~ "PING" ]]; then
      send "PONG ${line:5}"
   elif [[ $line =~ "376" ]]; then
      log '* Connected!'
      say 'NickServ' "identify $pass"
      sleep 2
      for chan in ${mychans[@]}; do
         send "JOIN $chan"
      done
   fi

   # Discard non-PRIVMSGs
   class=$(match "$line" '$4')
   if [ "$class" != 'PRIVMSG' ]; then
      continue
   fi

   # Message components
   nick=$(match "$line" '$1')
   if (grep -qi $nick <<<"${ignore[@]}"); then
         continue
   fi
   user=$(match "$line" '$2')
   host=$(match "$line" '$3')
   mask="$nick!$user@$host"
   chan=$(match "$line" '$5' | tr -d ' ')
   if [ "$chan" = "$mynick" ]; then
      chan=$nick
   fi
   msg=$(match "$line" '$6')
   log "($chan) <$nick> $msg"
   cmd=$(getcmd "$msg" '$1')

   now=$(date +%s)
   snick=$(sed -e 's/[]\/()$*.^|[]/\\&/g' <<<"$nick")
   if (grep -q "$nick" data/seen.db); then
      sed -ri "s/$snick [0-9]+/$snick $now/g" data/seen.db
   else
      echo "$nick $now" >> data/seen.db
   fi

   # Non-command hooks
   if [ -z "$cmd" ]; then
      thisuri=$(uri "$msg")
      if [ -n "$thisuri" ]; then
         say "$chan" "$(python3 modules/title.py "$thisuri")"
         continue
      fi
      number=$RANDOM
      let "number %= $randint"
      if [ $number -eq 67 ] || (grep -qi "\b$mynick\b" <<<"$msg"); then
         chat
      fi
      let "number %= $randwrite"
      if [ $number -eq 7 ]; then
         if (grep -qi 'http' <<<"$msg"); then
            continue
         fi
         log '* Learning...'
         (contrib/split.pl <<<"$msg") >> data/brain.db
      fi
      continue
   fi

   # Command components
   args=$(getcmd "$msg" '$2')
   arg=(${args// / })
   # Command hooks
   basic "$cmd"
   sporks "$cmd"
   if [ -e "modules/$cmd.py" ]; then
      say "$chan" "$(python3 modules/$cmd.py $args)"
   fi
   if [ "$mask" = "$owner" ]; then
      admin "$cmd"
   fi
   unset msg mask nick user host chan cmd args arg number thisuri
done
log '* Exiting...'
